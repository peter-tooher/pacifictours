@inject IHotelService HotelService

@if (HotelService.Hotels == null || HotelService.Hotels.Count == 0)
{
    <span>Loading Hotels...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var hotel in HotelService.Hotels)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/hotels/@hotel.HotelId">
                        <img class="media-img" src="@hotel.HotelImageUrl" alt="@hotel.HotelName" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/hotels/@hotel.HotelId">
                        <h4 class="mt-0">@hotel.HotelName</h4>
                    </a>
                    <p>@hotel.HotelDescription</p>
                    <p> <strong>Single Suite:</strong> £@hotel.SingleSuitePrice  </p>
                    <p> <strong>Double Suite:</strong> £@hotel.DoubleSuitePrice  </p>
                    <p> <strong>Family Suite:</strong> £@hotel.FamilySuitePrice  </p>
                </div>
            </li>
        }
    </ul>
}

@code {
    // A static list of hotels
    private static List<Hotel> Hotels = new List<Hotel>();

    // When the component is initialized, the GetHotels method is called to populate the Hotels list
    protected override async Task OnInitializedAsync()
    {
        await HotelService.GetHotels();
    }
}