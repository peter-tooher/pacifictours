@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<EditForm Model="user" OnValidSubmit="HandleRegistration"> 
<DataAnnotationsValidator />
    <div class="mb-3">
        <label for "firstName">First Name</label>
        <InputText id="firstName" @bind-Value="user.FirstName" class="form-control" />
        <ValidationMessage For="@(() => user.FirstName)" />
    </div>
    <div class="mb-3">
        <label for "lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="user.LastName" class="form-control" />
        <ValidationMessage For="@(() => user.LastName)" />
    </div>
    <div class="mb-3">
        <label for "email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"/>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="mb-3">
        <label for "passportNumber">Passport Number</label>
        <InputNumber id="passportNumber" @bind-Value="user.PassportNumber" class="form-control" />
        <ValidationMessage For="@(() => user.PassportNumber)" />
    </div>
    <div class="mb-3">
        <label for "contactNumber">Contact Number</label>
        <InputText id="contactNumber" @bind-Value="user.ContactNumber" class="form-control" />
        <ValidationMessage For="@(() => user.ContactNumber)" />
    </div>
    <div class="mb-3">
        <label for "userName">User Name</label>
        <InputText id="userName" @bind-Value="user.UserName" class="form-control" />
        <ValidationMessage For="@(() => user.UserName)" />
    </div>
    <div class="mb-3">
        <label for "password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="mb-3">
        <label for "confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />   
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="text-danger">
        <span>@message</span>
    </div>
</EditForm>

@code {
    // Define the UserRegister object that is used as the model for the form.
    UserRegister user = new UserRegister();

    // Define a string to hold the message that indicates the result of the registration.
    string message = string.Empty;
    string messageCssClass = string.Empty;


    // Define the method that handles the form submission.
    // This method calls the Register method of the AuthService and updates the message based on the result.
    async Task HandleRegistration() 
    {
        var result = await AuthService.Register(user);
        message = result.Message;
        if (result.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
}